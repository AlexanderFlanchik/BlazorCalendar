
@using Microsoft.AspNetCore.Components.Authorization

@inject NavigationManager navigationManager

@rendermode InteractiveAuto

<div class="navigation-container">
    @if (IsAuthenticated)
    {
        <div class="home-link-container">
            <a href="/">Home</a> |
            <a href="/about" @onclick="About">About</a>
        </div>
        <div class="identity-container">
            <span class="welcome-message">Welcome, @UserName!</span> |
            <a href="javascript:void(0)" @onclick="@Logout" @onclick:preventDefault>Sign out..</a>
        </div>
    }
</div>


@code {
    public bool IsAuthenticated { get; set; }
    public string? UserName { get; set; }

    [CascadingParameter]
    public Task<AuthenticationState>? AuthStateTask { get; set; }

    protected async override Task OnInitializedAsync()
    {
        if (AuthStateTask is null)
        {
            return;
        }

        var state = await AuthStateTask;
        var identity = state.User.Identity;
        IsAuthenticated = identity?.IsAuthenticated ?? false;
        UserName = identity?.Name;
    }

    private void Logout()
    {
        IsAuthenticated = false;
        navigationManager.NavigateTo("/SignOut");

        StateHasChanged();
    }

    private void About()
    {
        navigationManager.NavigateTo("/About");
    }
}